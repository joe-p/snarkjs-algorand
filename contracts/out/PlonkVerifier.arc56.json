{
    "name": "PlonkVerifier",
    "structs": {
        "Proof": [
            {
                "name": "A",
                "type": "byte[96]"
            },
            {
                "name": "B",
                "type": "byte[96]"
            },
            {
                "name": "C",
                "type": "byte[96]"
            },
            {
                "name": "Z",
                "type": "byte[96]"
            },
            {
                "name": "T1",
                "type": "byte[96]"
            },
            {
                "name": "T2",
                "type": "byte[96]"
            },
            {
                "name": "T3",
                "type": "byte[96]"
            },
            {
                "name": "Wxi",
                "type": "byte[96]"
            },
            {
                "name": "Wxiw",
                "type": "byte[96]"
            },
            {
                "name": "eval_a",
                "type": "uint256"
            },
            {
                "name": "eval_b",
                "type": "uint256"
            },
            {
                "name": "eval_c",
                "type": "uint256"
            },
            {
                "name": "eval_s1",
                "type": "uint256"
            },
            {
                "name": "eval_s2",
                "type": "uint256"
            },
            {
                "name": "eval_zw",
                "type": "uint256"
            }
        ],
        "VerificationKey": [
            {
                "name": "Qm",
                "type": "byte[96]"
            },
            {
                "name": "Ql",
                "type": "byte[96]"
            },
            {
                "name": "Qr",
                "type": "byte[96]"
            },
            {
                "name": "Qo",
                "type": "byte[96]"
            },
            {
                "name": "Qc",
                "type": "byte[96]"
            },
            {
                "name": "S1",
                "type": "byte[96]"
            },
            {
                "name": "S2",
                "type": "byte[96]"
            },
            {
                "name": "S3",
                "type": "byte[96]"
            },
            {
                "name": "power",
                "type": "uint64"
            },
            {
                "name": "nPublic",
                "type": "uint64"
            },
            {
                "name": "k1",
                "type": "uint64"
            },
            {
                "name": "k2",
                "type": "uint64"
            },
            {
                "name": "X_2",
                "type": "byte[192]"
            }
        ]
    },
    "methods": [
        {
            "name": "_dummy",
            "args": [
                {
                    "type": "(byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],uint64,uint64,uint64,uint64,byte[192])",
                    "struct": "VerificationKey",
                    "name": "_vk"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "CloseOut"
                ]
            },
            "readonly": false,
            "desc": "Dummy function that only exists so we can have the VerificationKey type in the generated client",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify",
            "args": [
                {
                    "type": "uint256[]",
                    "name": "signals"
                },
                {
                    "type": "(byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],uint256,uint256,uint256,uint256,uint256,uint256)",
                    "struct": "Proof",
                    "name": "proof"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        1273
                    ],
                    "errorMessage": "Fr inverse of zero"
                },
                {
                    "pc": [
                        440
                    ],
                    "errorMessage": "Length must be 192"
                },
                {
                    "pc": [
                        104
                    ],
                    "errorMessage": "Length must be 32"
                },
                {
                    "pc": [
                        167,
                        191,
                        215,
                        239,
                        263,
                        287,
                        311,
                        335,
                        1993,
                        2060,
                        2070,
                        2292,
                        2309,
                        2319,
                        2347,
                        2356,
                        2367,
                        2374,
                        2384
                    ],
                    "errorMessage": "Length must be 96"
                },
                {
                    "pc": [
                        50
                    ],
                    "errorMessage": "OnCompletion is not CloseOut"
                },
                {
                    "pc": [
                        30
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        2591
                    ],
                    "errorMessage": "Verification failed"
                },
                {
                    "pc": [
                        64
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        33,
                        53
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        574,
                        758,
                        787,
                        790,
                        809,
                        1018,
                        1030,
                        1042,
                        1054,
                        1065,
                        1490,
                        1505,
                        2014,
                        2019,
                        2026,
                        2035,
                        2044
                    ],
                    "errorMessage": "index access is out of bounds"
                },
                {
                    "pc": [
                        1390
                    ],
                    "errorMessage": "max array length exceeded"
                },
                {
                    "pc": [
                        94,
                        118,
                        800,
                        1125,
                        1150,
                        1381,
                        1526,
                        1699
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "cblocks"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "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",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {
        "ROOT_OF_UNITY": {
            "type": "AVMBytes"
        },
        "VERIFICATION_KEY": {
            "type": "AVMBytes"
        }
    }
}