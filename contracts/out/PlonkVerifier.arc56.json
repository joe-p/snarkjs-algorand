{
    "name": "PlonkVerifier",
    "structs": {
        "Proof": [
            {
                "name": "A",
                "type": "byte[96]"
            },
            {
                "name": "B",
                "type": "byte[96]"
            },
            {
                "name": "C",
                "type": "byte[96]"
            },
            {
                "name": "Z",
                "type": "byte[96]"
            },
            {
                "name": "T1",
                "type": "byte[96]"
            },
            {
                "name": "T2",
                "type": "byte[96]"
            },
            {
                "name": "T3",
                "type": "byte[96]"
            },
            {
                "name": "Wxi",
                "type": "byte[96]"
            },
            {
                "name": "Wxiw",
                "type": "byte[96]"
            },
            {
                "name": "eval_a",
                "type": "uint256"
            },
            {
                "name": "eval_b",
                "type": "uint256"
            },
            {
                "name": "eval_c",
                "type": "uint256"
            },
            {
                "name": "eval_s1",
                "type": "uint256"
            },
            {
                "name": "eval_s2",
                "type": "uint256"
            },
            {
                "name": "eval_zw",
                "type": "uint256"
            }
        ],
        "VerificationKey": [
            {
                "name": "Qm",
                "type": "byte[96]"
            },
            {
                "name": "Ql",
                "type": "byte[96]"
            },
            {
                "name": "Qr",
                "type": "byte[96]"
            },
            {
                "name": "Qo",
                "type": "byte[96]"
            },
            {
                "name": "Qc",
                "type": "byte[96]"
            },
            {
                "name": "S1",
                "type": "byte[96]"
            },
            {
                "name": "S2",
                "type": "byte[96]"
            },
            {
                "name": "S3",
                "type": "byte[96]"
            },
            {
                "name": "power",
                "type": "uint64"
            },
            {
                "name": "nPublic",
                "type": "uint64"
            },
            {
                "name": "k1",
                "type": "uint64"
            },
            {
                "name": "k2",
                "type": "uint64"
            },
            {
                "name": "X_2",
                "type": "byte[192]"
            }
        ]
    },
    "methods": [
        {
            "name": "_dummy",
            "args": [
                {
                    "type": "(byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],uint64,uint64,uint64,uint64,byte[192])",
                    "struct": "VerificationKey",
                    "name": "_vk"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "CloseOut"
                ]
            },
            "readonly": false,
            "desc": "Dummy function that only exists so we can have the VerificationKey type in the generated client",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify",
            "args": [
                {
                    "type": "uint256[]",
                    "name": "signals"
                },
                {
                    "type": "(byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],uint256,uint256,uint256,uint256,uint256,uint256)",
                    "struct": "Proof",
                    "name": "proof"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        1259
                    ],
                    "errorMessage": "Fr inverse of zero"
                },
                {
                    "pc": [
                        426
                    ],
                    "errorMessage": "Length must be 192"
                },
                {
                    "pc": [
                        105
                    ],
                    "errorMessage": "Length must be 32"
                },
                {
                    "pc": [
                        165,
                        188,
                        211,
                        234,
                        257,
                        280,
                        303,
                        326,
                        1809,
                        1818,
                        1949,
                        1959,
                        1986,
                        1995,
                        2002,
                        2069,
                        2079,
                        2301,
                        2318,
                        2328,
                        2357,
                        2366,
                        2377,
                        2384,
                        2409
                    ],
                    "errorMessage": "Length must be 96"
                },
                {
                    "pc": [
                        51
                    ],
                    "errorMessage": "OnCompletion is not CloseOut"
                },
                {
                    "pc": [
                        31
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        2462
                    ],
                    "errorMessage": "Verification failed"
                },
                {
                    "pc": [
                        65
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        34,
                        54
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        560,
                        773,
                        776,
                        1004,
                        1016,
                        1028,
                        1040,
                        1051,
                        1477,
                        1492,
                        2023,
                        2028,
                        2035,
                        2044,
                        2053
                    ],
                    "errorMessage": "index access is out of bounds"
                },
                {
                    "pc": [
                        1376
                    ],
                    "errorMessage": "max array length exceeded"
                },
                {
                    "pc": [
                        95,
                        119,
                        786,
                        1111,
                        1136,
                        1367,
                        1513,
                        1686
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "cblocks"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "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",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {
        "VERIFICATION_KEY": {
            "type": "AVMBytes"
        },
        "ROOT_OF_UNITY": {
            "type": "AVMBytes"
        }
    }
}